{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Swagger API"
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      },
      "ApiSecretAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-secret"
      },
      "ConnectorId": {
        "type": "apiKey",
        "in": "header",
        "name": "x-connector-id"
      },
      "OwnerId": {
        "type": "apiKey",
        "in": "header",
        "name": "x-owner-id"
      }
    }
  },
  "paths": {
    "/v1/connections": {
      "get": {
        "summary": "List connections",
        "tags": ["Connection"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "connection"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["connection"],
                                    "default": "connection"
                                  },
                                  "connectorId": {
                                    "type": "string"
                                  },
                                  "ownerId": {
                                    "type": "string"
                                  },
                                  "operations": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "connectorId",
                                  "ownerId",
                                  "operations",
                                  "status",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": []
          }
        ]
      }
    },
    "/v1/connections/{connectorId}/{ownerId}": {
      "get": {
        "summary": "Retrieve a connection",
        "tags": ["Connection"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["hubspot", "pipedrive"],
              "externalDocs": {
                "url": "/connectors",
                "description": "See available connectors."
              }
            },
            "required": true,
            "name": "connectorId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "ownerId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "connection"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["connection"],
                          "default": "connection"
                        },
                        "connectorId": {
                          "type": "string"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "operations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "connectorId",
                        "ownerId",
                        "operations",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a connection",
        "tags": ["Connection"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["hubspot", "pipedrive"],
              "externalDocs": {
                "url": "/connectors",
                "description": "See available connectors."
              }
            },
            "required": true,
            "name": "connectorId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "ownerId",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operations": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "genericCompany::create",
                        "genericCompany::retrieve",
                        "genericCompany::list",
                        "genericCompany::update",
                        "genericCompany::delete",
                        "genericContact::create",
                        "genericContact::retrieve",
                        "genericContact::list",
                        "genericContact::update",
                        "genericContact::delete",
                        "genericUser::create",
                        "genericUser::retrieve",
                        "genericUser::list",
                        "genericUser::update",
                        "genericUser::delete",
                        "genericWorkspace::create",
                        "genericWorkspace::retrieve",
                        "genericWorkspace::list",
                        "genericWorkspace::update",
                        "genericWorkspace::delete",
                        "crmOpportunity::create",
                        "crmOpportunity::retrieve",
                        "crmOpportunity::list",
                        "crmOpportunity::update",
                        "crmOpportunity::delete",
                        "crmStage::create",
                        "crmStage::retrieve",
                        "crmStage::list",
                        "crmStage::update",
                        "crmStage::delete",
                        "crmPipeline::create",
                        "crmPipeline::retrieve",
                        "crmPipeline::list",
                        "crmPipeline::update",
                        "crmPipeline::delete"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "connection"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["connection"],
                          "default": "connection"
                        },
                        "connectorId": {
                          "type": "string"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "operations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "connectorId",
                        "ownerId",
                        "operations",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": []
          }
        ]
      },
      "patch": {
        "summary": "Update a connection",
        "tags": ["Connection"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["hubspot", "pipedrive"],
              "externalDocs": {
                "url": "/connectors",
                "description": "See available connectors."
              }
            },
            "required": true,
            "name": "connectorId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "ownerId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false,
              "description": "Flag to create the connection if it doesn't exist"
            },
            "required": false,
            "name": "createIfMissing",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "operations": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "genericCompany::create",
                        "genericCompany::retrieve",
                        "genericCompany::list",
                        "genericCompany::update",
                        "genericCompany::delete",
                        "genericContact::create",
                        "genericContact::retrieve",
                        "genericContact::list",
                        "genericContact::update",
                        "genericContact::delete",
                        "genericUser::create",
                        "genericUser::retrieve",
                        "genericUser::list",
                        "genericUser::update",
                        "genericUser::delete",
                        "genericWorkspace::create",
                        "genericWorkspace::retrieve",
                        "genericWorkspace::list",
                        "genericWorkspace::update",
                        "genericWorkspace::delete",
                        "crmOpportunity::create",
                        "crmOpportunity::retrieve",
                        "crmOpportunity::list",
                        "crmOpportunity::update",
                        "crmOpportunity::delete",
                        "crmStage::create",
                        "crmStage::retrieve",
                        "crmStage::list",
                        "crmStage::update",
                        "crmStage::delete",
                        "crmPipeline::create",
                        "crmPipeline::retrieve",
                        "crmPipeline::list",
                        "crmPipeline::update",
                        "crmPipeline::delete"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "connection"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["connection"],
                          "default": "connection"
                        },
                        "connectorId": {
                          "type": "string"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "operations": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "status": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "connectorId",
                        "ownerId",
                        "operations",
                        "status",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a connection",
        "tags": ["Connection"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["hubspot", "pipedrive"],
              "externalDocs": {
                "url": "/connectors",
                "description": "See available connectors."
              }
            },
            "required": true,
            "name": "connectorId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "ownerId",
            "in": "path"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": []
          }
        ]
      }
    },
    "/v1/connections/{connectorId}/{ownerId}/authorization": {
      "post": {
        "summary": "Authorize a connection",
        "tags": ["Connection"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "enum": ["hubspot", "pipedrive"],
              "externalDocs": {
                "url": "/connectors",
                "description": "See available connectors."
              }
            },
            "required": true,
            "name": "connectorId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "ownerId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "format": "uri"
            },
            "required": false,
            "name": "redirectUrl",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "scopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "settings": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "connectionAuthorization"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["connectionAuthorization"],
                          "default": "connectionAuthorization"
                        },
                        "connectorId": {
                          "type": "string"
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "authorizationUrl": {
                          "type": "string"
                        }
                      },
                      "required": ["connectorId", "ownerId", "status"]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": []
          }
        ]
      }
    },
    "/v1/proxy": {
      "post": {
        "summary": "Proxy request to connector",
        "tags": ["Proxy"],
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string",
                    "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"]
                  },
                  "data": {
                    "type": "object",
                    "additionalProperties": {
                      "nullable": true
                    }
                  },
                  "query": {
                    "type": "object",
                    "additionalProperties": {
                      "nullable": true
                    }
                  },
                  "headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "required": ["path", "method"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "nullable": true
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericCompany/{resourceId}": {
      "get": {
        "summary": "Retrieve Company",
        "tags": ["Company"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name"]
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "fields",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name"]
                  },
                  "minItems": 1
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "Name"
                            }
                          },
                          "required": ["name"]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code"]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "model",
                        "id",
                        "fields",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "patch": {
        "summary": "Update Company",
        "tags": ["Company"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Name"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Name"
                                }
                              },
                              "required": ["name"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericCompany": {
      "get": {
        "summary": "List Company",
        "tags": ["Company"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "resource"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "Name"
                                      }
                                    },
                                    "required": ["name"]
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "required": ["code"]
                                    }
                                  }
                                },
                                "required": [
                                  "object",
                                  "model",
                                  "id",
                                  "fields",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "post": {
        "summary": "Create Company",
        "tags": ["Company"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Name"
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Name"
                                }
                              },
                              "required": ["name"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericContact/{resourceId}": {
      "get": {
        "summary": "Retrieve Contact",
        "tags": ["Contact"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "firstName",
                      "lastName",
                      "email",
                      "phone",
                      "companyName"
                    ]
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "fields",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "firstName",
                      "lastName",
                      "email",
                      "phone",
                      "companyName"
                    ]
                  },
                  "minItems": 1
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "First name"
                            },
                            "lastName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "Last name"
                            },
                            "email": {
                              "type": "string",
                              "minLength": 5,
                              "maxLength": 250,
                              "format": "email",
                              "description": "Email"
                            },
                            "phone": {
                              "type": "string",
                              "minLength": 5,
                              "maxLength": 20,
                              "description": "Phone number"
                            },
                            "companyName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 2,
                              "description": "Company name"
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code"]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "model",
                        "id",
                        "fields",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "patch": {
        "summary": "Update Contact",
        "tags": ["Contact"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "First name"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Last name"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 250,
                    "format": "email",
                    "description": "Email"
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 20,
                    "description": "Phone number"
                  },
                  "companyName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2,
                    "description": "Company name"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "First name"
                                },
                                "lastName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Last name"
                                },
                                "email": {
                                  "type": "string",
                                  "minLength": 5,
                                  "maxLength": 250,
                                  "format": "email",
                                  "description": "Email"
                                },
                                "phone": {
                                  "type": "string",
                                  "minLength": 5,
                                  "maxLength": 20,
                                  "description": "Phone number"
                                },
                                "companyName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 2,
                                  "description": "Company name"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericContact": {
      "get": {
        "summary": "List Contact",
        "tags": ["Contact"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "resource"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "First name"
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "Last name"
                                      },
                                      "email": {
                                        "type": "string",
                                        "minLength": 5,
                                        "maxLength": 250,
                                        "format": "email",
                                        "description": "Email"
                                      },
                                      "phone": {
                                        "type": "string",
                                        "minLength": 5,
                                        "maxLength": 20,
                                        "description": "Phone number"
                                      },
                                      "companyName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 2,
                                        "description": "Company name"
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "required": ["code"]
                                    }
                                  }
                                },
                                "required": [
                                  "object",
                                  "model",
                                  "id",
                                  "fields",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "post": {
        "summary": "Create Contact",
        "tags": ["Contact"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "First name"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Last name"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 250,
                    "format": "email",
                    "description": "Email"
                  },
                  "phone": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 20,
                    "description": "Phone number"
                  },
                  "companyName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 2,
                    "description": "Company name"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "First name"
                                },
                                "lastName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Last name"
                                },
                                "email": {
                                  "type": "string",
                                  "minLength": 5,
                                  "maxLength": 250,
                                  "format": "email",
                                  "description": "Email"
                                },
                                "phone": {
                                  "type": "string",
                                  "minLength": 5,
                                  "maxLength": 20,
                                  "description": "Phone number"
                                },
                                "companyName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 2,
                                  "description": "Company name"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericUser/{resourceId}": {
      "get": {
        "summary": "Retrieve User",
        "tags": ["User"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["firstName", "lastName", "email"]
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "fields",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["firstName", "lastName", "email"]
                  },
                  "minItems": 1
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "properties": {
                            "firstName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "First name"
                            },
                            "lastName": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "Last name"
                            },
                            "email": {
                              "type": "string",
                              "minLength": 5,
                              "maxLength": 250,
                              "format": "email",
                              "description": "Email"
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code"]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "model",
                        "id",
                        "fields",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "patch": {
        "summary": "Update User",
        "tags": ["User"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "First name"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Last name"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 250,
                    "format": "email",
                    "description": "Email"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "First name"
                                },
                                "lastName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Last name"
                                },
                                "email": {
                                  "type": "string",
                                  "minLength": 5,
                                  "maxLength": 250,
                                  "format": "email",
                                  "description": "Email"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericUser": {
      "get": {
        "summary": "List User",
        "tags": ["User"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "resource"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "First name"
                                      },
                                      "lastName": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "Last name"
                                      },
                                      "email": {
                                        "type": "string",
                                        "minLength": 5,
                                        "maxLength": 250,
                                        "format": "email",
                                        "description": "Email"
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "required": ["code"]
                                    }
                                  }
                                },
                                "required": [
                                  "object",
                                  "model",
                                  "id",
                                  "fields",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "post": {
        "summary": "Create User",
        "tags": ["User"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "First name"
                  },
                  "lastName": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Last name"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 5,
                    "maxLength": 250,
                    "format": "email",
                    "description": "Email"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "First name"
                                },
                                "lastName": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Last name"
                                },
                                "email": {
                                  "type": "string",
                                  "minLength": 5,
                                  "maxLength": 250,
                                  "format": "email",
                                  "description": "Email"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericWorkspace/{resourceId}": {
      "get": {
        "summary": "Retrieve Workspace",
        "tags": ["Workspace"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name"]
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "fields",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name"]
                  },
                  "minItems": 1
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "Name"
                            }
                          },
                          "required": ["name"]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code"]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "model",
                        "id",
                        "fields",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "patch": {
        "summary": "Update Workspace",
        "tags": ["Workspace"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Name"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Name"
                                }
                              },
                              "required": ["name"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/genericWorkspace": {
      "get": {
        "summary": "List Workspace",
        "tags": ["Workspace"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "resource"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "Name"
                                      }
                                    },
                                    "required": ["name"]
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "required": ["code"]
                                    }
                                  }
                                },
                                "required": [
                                  "object",
                                  "model",
                                  "id",
                                  "fields",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "post": {
        "summary": "Create Workspace",
        "tags": ["Workspace"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Name"
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Name"
                                }
                              },
                              "required": ["name"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/crmOpportunity/{resourceId}": {
      "get": {
        "summary": "Retrieve Opportunity",
        "tags": ["Opportunity"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "amount",
                      "currency",
                      "stage",
                      "pipeline",
                      "owner",
                      "contacts",
                      "companies"
                    ]
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "fields",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "name",
                      "amount",
                      "currency",
                      "stage",
                      "pipeline",
                      "owner",
                      "contacts",
                      "companies"
                    ]
                  },
                  "minItems": 1
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "Opportunity name"
                            },
                            "amount": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Opportunity amount"
                            },
                            "currency": {
                              "type": "string",
                              "minLength": 3,
                              "maxLength": 3,
                              "description": "Currency code"
                            },
                            "stage": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "object": {
                                  "type": "string",
                                  "enum": ["resourceRef", "resource"]
                                },
                                "model": {
                                  "type": "string"
                                },
                                "fields": {
                                  "nullable": true
                                },
                                "rawResource": {
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": ["id"],
                              "description": "Stage of the opportunity"
                            },
                            "pipeline": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "object": {
                                  "type": "string",
                                  "enum": ["resourceRef", "resource"]
                                },
                                "model": {
                                  "type": "string"
                                },
                                "fields": {
                                  "nullable": true
                                },
                                "rawResource": {
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": ["id"],
                              "description": "Pipeline of the opportunity"
                            },
                            "owner": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "object": {
                                  "type": "string",
                                  "enum": ["resourceRef", "resource"]
                                },
                                "model": {
                                  "type": "string"
                                },
                                "fields": {
                                  "nullable": true
                                },
                                "rawResource": {
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": ["id"],
                              "description": "User that own the opportunity"
                            },
                            "contacts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "object": {
                                    "type": "string",
                                    "enum": ["resourceRef", "resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "nullable": true
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"]
                              },
                              "description": "Associated contacts"
                            },
                            "companies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "object": {
                                    "type": "string",
                                    "enum": ["resourceRef", "resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "nullable": true
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"]
                              },
                              "description": "Associated companies"
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code"]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "model",
                        "id",
                        "fields",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "patch": {
        "summary": "Update Opportunity",
        "tags": ["Opportunity"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Opportunity name"
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Opportunity amount"
                  },
                  "currency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "description": "Currency code"
                  },
                  "stage": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "Stage of the opportunity"
                  },
                  "pipeline": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "Pipeline of the opportunity"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "User that own the opportunity"
                  },
                  "contacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string",
                          "enum": ["resourceRef", "resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "fields": {
                          "nullable": true
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": ["id"]
                    },
                    "description": "Associated contacts"
                  },
                  "companies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string",
                          "enum": ["resourceRef", "resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "fields": {
                          "nullable": true
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": ["id"]
                    },
                    "description": "Associated companies"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Opportunity name"
                                },
                                "amount": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "Opportunity amount"
                                },
                                "currency": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 3,
                                  "description": "Currency code"
                                },
                                "stage": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "Stage of the opportunity"
                                },
                                "pipeline": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "Pipeline of the opportunity"
                                },
                                "owner": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "User that own the opportunity"
                                },
                                "contacts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["resourceRef", "resource"]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "fields": {
                                        "nullable": true
                                      },
                                      "rawResource": {
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id"]
                                  },
                                  "description": "Associated contacts"
                                },
                                "companies": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["resourceRef", "resource"]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "fields": {
                                        "nullable": true
                                      },
                                      "rawResource": {
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id"]
                                  },
                                  "description": "Associated companies"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/crmOpportunity": {
      "get": {
        "summary": "List Opportunity",
        "tags": ["Opportunity"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "resource"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "Opportunity name"
                                      },
                                      "amount": {
                                        "type": "number",
                                        "minimum": 0,
                                        "description": "Opportunity amount"
                                      },
                                      "currency": {
                                        "type": "string",
                                        "minLength": 3,
                                        "maxLength": 3,
                                        "description": "Currency code"
                                      },
                                      "stage": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["resourceRef", "resource"]
                                          },
                                          "model": {
                                            "type": "string"
                                          },
                                          "fields": {
                                            "nullable": true
                                          },
                                          "rawResource": {
                                            "nullable": true
                                          },
                                          "createdAt": {
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "type": "string"
                                          }
                                        },
                                        "required": ["id"],
                                        "description": "Stage of the opportunity"
                                      },
                                      "pipeline": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["resourceRef", "resource"]
                                          },
                                          "model": {
                                            "type": "string"
                                          },
                                          "fields": {
                                            "nullable": true
                                          },
                                          "rawResource": {
                                            "nullable": true
                                          },
                                          "createdAt": {
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "type": "string"
                                          }
                                        },
                                        "required": ["id"],
                                        "description": "Pipeline of the opportunity"
                                      },
                                      "owner": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["resourceRef", "resource"]
                                          },
                                          "model": {
                                            "type": "string"
                                          },
                                          "fields": {
                                            "nullable": true
                                          },
                                          "rawResource": {
                                            "nullable": true
                                          },
                                          "createdAt": {
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "type": "string"
                                          }
                                        },
                                        "required": ["id"],
                                        "description": "User that own the opportunity"
                                      },
                                      "contacts": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string",
                                              "enum": [
                                                "resourceRef",
                                                "resource"
                                              ]
                                            },
                                            "model": {
                                              "type": "string"
                                            },
                                            "fields": {
                                              "nullable": true
                                            },
                                            "rawResource": {
                                              "nullable": true
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["id"]
                                        },
                                        "description": "Associated contacts"
                                      },
                                      "companies": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string",
                                              "enum": [
                                                "resourceRef",
                                                "resource"
                                              ]
                                            },
                                            "model": {
                                              "type": "string"
                                            },
                                            "fields": {
                                              "nullable": true
                                            },
                                            "rawResource": {
                                              "nullable": true
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["id"]
                                        },
                                        "description": "Associated companies"
                                      }
                                    }
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "required": ["code"]
                                    }
                                  }
                                },
                                "required": [
                                  "object",
                                  "model",
                                  "id",
                                  "fields",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "post": {
        "summary": "Create Opportunity",
        "tags": ["Opportunity"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Opportunity name"
                  },
                  "amount": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Opportunity amount"
                  },
                  "currency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3,
                    "description": "Currency code"
                  },
                  "stage": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "Stage of the opportunity"
                  },
                  "pipeline": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "Pipeline of the opportunity"
                  },
                  "owner": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "User that own the opportunity"
                  },
                  "contacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string",
                          "enum": ["resourceRef", "resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "fields": {
                          "nullable": true
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": ["id"]
                    },
                    "description": "Associated contacts"
                  },
                  "companies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string",
                          "enum": ["resourceRef", "resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "fields": {
                          "nullable": true
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": ["id"]
                    },
                    "description": "Associated companies"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Opportunity name"
                                },
                                "amount": {
                                  "type": "number",
                                  "minimum": 0,
                                  "description": "Opportunity amount"
                                },
                                "currency": {
                                  "type": "string",
                                  "minLength": 3,
                                  "maxLength": 3,
                                  "description": "Currency code"
                                },
                                "stage": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "Stage of the opportunity"
                                },
                                "pipeline": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "Pipeline of the opportunity"
                                },
                                "owner": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "User that own the opportunity"
                                },
                                "contacts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["resourceRef", "resource"]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "fields": {
                                        "nullable": true
                                      },
                                      "rawResource": {
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id"]
                                  },
                                  "description": "Associated contacts"
                                },
                                "companies": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["resourceRef", "resource"]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "fields": {
                                        "nullable": true
                                      },
                                      "rawResource": {
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id"]
                                  },
                                  "description": "Associated companies"
                                }
                              }
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/crmStage/{resourceId}": {
      "get": {
        "summary": "Retrieve Stage",
        "tags": ["Stage"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name", "type", "pipeline"]
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "fields",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name", "type", "pipeline"]
                  },
                  "minItems": 1
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "Stage name"
                            },
                            "type": {
                              "type": "string",
                              "enum": ["OPEN", "WON", "LOST", "UNKNOWN"],
                              "description": "Stage type"
                            },
                            "pipeline": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "object": {
                                  "type": "string",
                                  "enum": ["resourceRef", "resource"]
                                },
                                "model": {
                                  "type": "string"
                                },
                                "fields": {
                                  "nullable": true
                                },
                                "rawResource": {
                                  "nullable": true
                                },
                                "createdAt": {
                                  "type": "string"
                                },
                                "updatedAt": {
                                  "type": "string"
                                }
                              },
                              "required": ["id"],
                              "description": "Associated pipeline"
                            }
                          },
                          "required": ["name", "type"]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code"]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "model",
                        "id",
                        "fields",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "patch": {
        "summary": "Update Stage",
        "tags": ["Stage"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Stage name"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["OPEN", "WON", "LOST", "UNKNOWN"],
                    "description": "Stage type"
                  },
                  "pipeline": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "Associated pipeline"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Stage name"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": ["OPEN", "WON", "LOST", "UNKNOWN"],
                                  "description": "Stage type"
                                },
                                "pipeline": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "Associated pipeline"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/crmStage": {
      "get": {
        "summary": "List Stage",
        "tags": ["Stage"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "resource"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "Stage name"
                                      },
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "OPEN",
                                          "WON",
                                          "LOST",
                                          "UNKNOWN"
                                        ],
                                        "description": "Stage type"
                                      },
                                      "pipeline": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          },
                                          "object": {
                                            "type": "string",
                                            "enum": ["resourceRef", "resource"]
                                          },
                                          "model": {
                                            "type": "string"
                                          },
                                          "fields": {
                                            "nullable": true
                                          },
                                          "rawResource": {
                                            "nullable": true
                                          },
                                          "createdAt": {
                                            "type": "string"
                                          },
                                          "updatedAt": {
                                            "type": "string"
                                          }
                                        },
                                        "required": ["id"],
                                        "description": "Associated pipeline"
                                      }
                                    },
                                    "required": ["name", "type"]
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "required": ["code"]
                                    }
                                  }
                                },
                                "required": [
                                  "object",
                                  "model",
                                  "id",
                                  "fields",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "post": {
        "summary": "Create Stage",
        "tags": ["Stage"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Stage name"
                  },
                  "type": {
                    "type": "string",
                    "enum": ["OPEN", "WON", "LOST", "UNKNOWN"],
                    "description": "Stage type"
                  },
                  "pipeline": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "object": {
                        "type": "string",
                        "enum": ["resourceRef", "resource"]
                      },
                      "model": {
                        "type": "string"
                      },
                      "fields": {
                        "nullable": true
                      },
                      "rawResource": {
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string"
                      },
                      "updatedAt": {
                        "type": "string"
                      }
                    },
                    "required": ["id"],
                    "description": "Associated pipeline"
                  }
                },
                "required": ["name", "type"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Stage name"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": ["OPEN", "WON", "LOST", "UNKNOWN"],
                                  "description": "Stage type"
                                },
                                "pipeline": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "object": {
                                      "type": "string",
                                      "enum": ["resourceRef", "resource"]
                                    },
                                    "model": {
                                      "type": "string"
                                    },
                                    "fields": {
                                      "nullable": true
                                    },
                                    "rawResource": {
                                      "nullable": true
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "updatedAt": {
                                      "type": "string"
                                    }
                                  },
                                  "required": ["id"],
                                  "description": "Associated pipeline"
                                }
                              },
                              "required": ["name", "type"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/crmPipeline/{resourceId}": {
      "get": {
        "summary": "Retrieve Pipeline",
        "tags": ["Pipeline"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name", "stages"]
                  }
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "fields",
            "in": "query"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["name", "stages"]
                  },
                  "minItems": 1
                },
                {
                  "type": "string"
                }
              ]
            },
            "required": false,
            "name": "expand",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "enum": ["resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "fields": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 250,
                              "description": "Pipeline name"
                            },
                            "stages": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "object": {
                                    "type": "string",
                                    "enum": ["resourceRef", "resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "nullable": true
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  }
                                },
                                "required": ["id"]
                              },
                              "description": "Stages in the pipeline"
                            }
                          },
                          "required": ["name", "stages"]
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "warnings": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": ["code"]
                          }
                        }
                      },
                      "required": [
                        "object",
                        "model",
                        "id",
                        "fields",
                        "createdAt",
                        "updatedAt"
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "patch": {
        "summary": "Update Pipeline",
        "tags": ["Pipeline"],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "required": true,
            "name": "resourceId",
            "in": "path"
          },
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Pipeline name"
                  },
                  "stages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string",
                          "enum": ["resourceRef", "resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "fields": {
                          "nullable": true
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": ["id"]
                    },
                    "description": "Stages in the pipeline"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Pipeline name"
                                },
                                "stages": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["resourceRef", "resource"]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "fields": {
                                        "nullable": true
                                      },
                                      "rawResource": {
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id"]
                                  },
                                  "description": "Stages in the pipeline"
                                }
                              },
                              "required": ["name", "stages"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    },
    "/v1/resources/crmPipeline": {
      "get": {
        "summary": "List Pipeline",
        "tags": ["Pipeline"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "default": 50
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string"
            },
            "required": false,
            "name": "cursor",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "list"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "default": "resource"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "object": {
                                    "type": "string",
                                    "enum": ["resource"]
                                  },
                                  "model": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "fields": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 250,
                                        "description": "Pipeline name"
                                      },
                                      "stages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            },
                                            "object": {
                                              "type": "string",
                                              "enum": [
                                                "resourceRef",
                                                "resource"
                                              ]
                                            },
                                            "model": {
                                              "type": "string"
                                            },
                                            "fields": {
                                              "nullable": true
                                            },
                                            "rawResource": {
                                              "nullable": true
                                            },
                                            "createdAt": {
                                              "type": "string"
                                            },
                                            "updatedAt": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["id"]
                                        },
                                        "description": "Stages in the pipeline"
                                      }
                                    },
                                    "required": ["name", "stages"]
                                  },
                                  "createdAt": {
                                    "type": "string"
                                  },
                                  "updatedAt": {
                                    "type": "string"
                                  },
                                  "rawResource": {
                                    "nullable": true
                                  },
                                  "warnings": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "code": {
                                          "type": "string"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      },
                                      "required": ["code"]
                                    }
                                  }
                                },
                                "required": [
                                  "object",
                                  "model",
                                  "id",
                                  "fields",
                                  "createdAt",
                                  "updatedAt"
                                ]
                              }
                            ]
                          }
                        },
                        "next": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "required": ["data", "next"],
                      "additionalProperties": false
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      },
      "post": {
        "summary": "Create Pipeline",
        "tags": ["Pipeline"],
        "parameters": [
          {
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "string"
                }
              ],
              "default": false
            },
            "required": false,
            "name": "returnResource",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 250,
                    "description": "Pipeline name"
                  },
                  "stages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "object": {
                          "type": "string",
                          "enum": ["resourceRef", "resource"]
                        },
                        "model": {
                          "type": "string"
                        },
                        "fields": {
                          "nullable": true
                        },
                        "rawResource": {
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        }
                      },
                      "required": ["id"]
                    },
                    "description": "Stages in the pipeline"
                  }
                },
                "required": ["name", "stages"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "object": {
                          "type": "string",
                          "default": "resource"
                        }
                      }
                    },
                    {
                      "anyOf": [
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resourceRef"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": ["object", "model", "id"],
                          "additionalProperties": false
                        },
                        {
                          "type": "object",
                          "properties": {
                            "object": {
                              "type": "string",
                              "enum": ["resource"]
                            },
                            "model": {
                              "type": "string"
                            },
                            "id": {
                              "type": "string"
                            },
                            "fields": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 1,
                                  "maxLength": 250,
                                  "description": "Pipeline name"
                                },
                                "stages": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "object": {
                                        "type": "string",
                                        "enum": ["resourceRef", "resource"]
                                      },
                                      "model": {
                                        "type": "string"
                                      },
                                      "fields": {
                                        "nullable": true
                                      },
                                      "rawResource": {
                                        "nullable": true
                                      },
                                      "createdAt": {
                                        "type": "string"
                                      },
                                      "updatedAt": {
                                        "type": "string"
                                      }
                                    },
                                    "required": ["id"]
                                  },
                                  "description": "Stages in the pipeline"
                                }
                              },
                              "required": ["name", "stages"]
                            },
                            "createdAt": {
                              "type": "string"
                            },
                            "updatedAt": {
                              "type": "string"
                            },
                            "rawResource": {
                              "nullable": true
                            },
                            "warnings": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "message": {
                                    "type": "string"
                                  }
                                },
                                "required": ["code"]
                              }
                            }
                          },
                          "required": [
                            "object",
                            "model",
                            "id",
                            "fields",
                            "createdAt",
                            "updatedAt"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "enum": [
                        "MORPH::BAD_CONFIGURATION",
                        "MORPH::UNKNOWN_ERROR",
                        "MORPH::ADAPTER::CONNECTION_NOT_FOUND",
                        "MORPH::ADAPTER::AUTHORIZATION_DATA_INVALID",
                        "MORPH::SESSION::EXPIRED",
                        "MORPH::SESSION::TOKEN_VALIDATION_FAILED",
                        "MORPH::CONNECTION::MISSING_REQUIRED_AUTHORIZATION_SETTINGS",
                        "MORPH::CONNECTION::AUTH_TYPE_NOT_SUPPORTED",
                        "MORPH::CONNECTION::ACCESS_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESH_TOKEN_MISSIN",
                        "MORPH::CONNECTION::REFRESHING_TOKEN_FAILED",
                        "MORPH::CONNECTION::CREATION_FAILED",
                        "MORPH::CONNECTION::UPDATE_FAILED",
                        "MORPH::CONNECTION::NOT_FOUND",
                        "MORPH::CONNECTION::RETRIEVE_FAILED",
                        "MORPH::CONNECTION::DELETION_FAILED",
                        "MORPH::CONNECTION::PROXY::REQUEST_FAILED",
                        "MORPH::CONNECTION::PROXY::BAD_REQUEST",
                        "MORPH::CONNECTION::PROXY::UNAUTHORIZED",
                        "MORPH::CONNECTION::PROXY::FORBIDDEN",
                        "MORPH::CONNECTION::PROXY::NOT_FOUND",
                        "MORPH::CONNECTION::PROXY::RATE_LIMIT_EXCEEDED",
                        "MORPH::CONNECTION::PROXY::SERVER_ERROR",
                        "CONNECTOR::NOT_FOUND",
                        "CONNECTOR::OPERATION::NOT_FOUND",
                        "CONNECTOR::OPERATION::RESOURCE_NOT_FOUND",
                        "CONNECTOR::OPERATION::BAD_REQUEST",
                        "CONNECTOR::OPERATION::SERVER_ERROR",
                        "CONNECTOR::RESOURCE_MODEL::NOT_FOUND",
                        "CONNECTOR::MAPPER::READ_VALIDATION_FAILED",
                        "CONNECTOR::MAPPER::READ_FAILED",
                        "CONNECTOR::UNKNOWN_ERROR",
                        "CONNECTOR::BAD_CONFIGURATION"
                      ]
                    },
                    "message": {
                      "type": "string",
                      "default": ""
                    }
                  },
                  "required": ["error"]
                }
              }
            }
          }
        },
        "security": [
          {
            "ApiKeyAuth": [],
            "ApiSecretAuth": [],
            "ConnectorId": [],
            "OwnerId": []
          }
        ]
      }
    }
  },
  "externalDocs": {
    "description": "View the raw OpenAPI Specification in JSON format",
    "url": "/swagger.json"
  }
}
